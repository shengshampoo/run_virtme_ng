name: Run

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  run:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      ### DEPENDENCIES ###

      # Hard turn-off interactive mode
      - run: echo 'debconf debconf/frontend select Noninteractive' | sudo debconf-set-selections

      # Install XanMod Kernel and virtme_ng dependencies
      - run: |
         wget -qO - https://gitlab.com/afrd.gpg | sudo gpg --dearmor -o /usr/share/keyrings/xanmod-archive-keyring.gpg
         echo 'deb [signed-by=/usr/share/keyrings/xanmod-archive-keyring.gpg] http://deb.xanmod.org releases main' | sudo tee /etc/apt/sources.list.d/xanmod-release.list
      - run: sudo apt update
      - run: sudo apt install --yes git qemu-kvm udev iproute2 busybox-static coreutils python3-requests libvirt-clients kbd kmod file rsync zstd udev linux-xanmod-x64v3      

      ### END DEPENDENCIES ###

      # Checkout git repository
      - uses: actions/checkout@v4
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "19.1.7"
          arch: "x64"      

      - name: Set CC environment variable and build
        run: |
          echo "CC=$(which clang)" >> $GITHUB_ENV # Set CC to the installed clang
          echo "LDFLAGS=-fuse-ld=lld -flto=thin" >> $GITHUB_ENV 
      - name: Set up Python 3.13
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip

      # Run `uname -r` using a vanilla v6.16 kernel
      - run: |
          cd ~
          git clone https://github.com/arighi/virtme-ng.git
          cd virtme-ng
          BUILD_VIRTME_NG_INIT=1 pip install .
          sudo ./vng -r 6.16.8-x64v3-xanmod1 -- uname -r
          sudo ./vng -r 6.16.8-x64v3-xanmod1 -- uname -o
          sudo ./vng -r 6.16.8-x64v3-xanmod1 -- uname -a
        
      # Setup KVM support
      - name: "KVM support"
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      # Re-run with KVM support
      - name: "Check KVM support"
        run: |
          cd ~/virtme-ng
          clocksource="/sys/devices/system/clocksource/clocksource0/current_clocksource"
          [ "$(sudo ./vng -r 6.16.8-x64v3-xanmod1 -- cat "${clocksource}")" = "kvm-clock" ]

      # Compile kernel module
      - name: "Compile kernel module"
        run: |
          cd ~
          git clone https://github.com/amnezia-vpn/amneziawg-linux-kernel-module        
          cd amneziawg-linux-kernel-module/src
          curl -sL https://gitlab.com/xanmod/linux/-/archive/6.16.8-xanmod1/linux-6.16.8-xanmod1.tar.bz2 | tar xv --bzip
          ln -sf linux-6.16.8-xanmod1 kernel
          sudo cp /usr/src/linux-headers-6.16.8-x64v3-xanmod1/scripts/Makefile.modfinal /usr/src/linux-headers-6.16.8-x64v3-xanmod1/scripts/Makefile.modfinal.old
          sudo sed -i -e '/ifdef CONFIG_DEBUG_INFO_BTF_MODULES/,+2d' /usr/src/linux-headers-6.16.8-x64v3-xanmod1/scripts/Makefile.modfinal
          sudo ~/virtme-ng/vng -r 6.16.8-x64v3-xanmod1 -- make

